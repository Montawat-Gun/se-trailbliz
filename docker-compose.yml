## FOR RUN ON DOCKER ##

version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"  # RabbitMQ standard port
      - "15673:15672" # RabbitMQ management interface
    restart: always

  api-db:
    image: postgres:13
    ports:
      - "30002:5432"  # PostgreSQL port for api service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: api
    restart: always

  api-gateway:
    image: chainecs/api-gateway-img:latest
    ports:
        - "30003:3333"  # Port for api-gateway service
    depends_on:
        - api-db
        - chat-service
        - organize-db
        - organize-service
        - profile-db
        - profile-service
        - rabbitmq
    environment:
        DATABASE_URL: "postgresql://postgres:123@api-db:5432/api"
        JWT_SECRET: "super-secret"
        PORT: 3333
        CHAT_BASE_URL: "chat-service:30043"
        ORGANIZE_BASE_URL: "http://organize-service:5003"
        PROFILE_BASE_URL: "http://profile-service:5004"
        RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    command: /bin/sh -c "npx prisma migrate dev && yarn start"
    restart: always

  chat-service:
    image: chainecs/chat-img
    ports:
      - 30043:30043
    environment:
      - MONGODB_CONNECTION_STRING=mongodb+srv://chain:1234@cluster0.z7ijqog.mongodb.net/
    restart: always

  organize-db:
    image: postgres:13
    ports:
      - "30004:5432"  # PostgreSQL port for organize service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: organizeDB
    restart: always

  organize-service:
    image: chainecs/organize-img:latest
    ports:
      - "5003:5003"  # Port for organize service
    depends_on:
      - organize-db
      - rabbitmq
    environment:
      DB_HOST: organize-db
      DB_PORT: 5432  # Standard PostgreSQL port
      DB_USER: postgres
      DB_PASSWORD: 123
      DB_NAME: organizeDB
      DB_SSLMODE: disable
      DB_TIMEZONE: Asia/Bangkok
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    restart: always

  profile-db:
    image: postgres:13
    ports:
      - "30006:5432"  # PostgreSQL port for profile service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: profileDB
    restart: always

  profile-service:
    image: chainecs/profile-img:latest
    ports:
      - "5004:5004"  # Port for profile service
    depends_on:
      - profile-db
      - rabbitmq
    environment:
      DB_HOST: profile-db
      DB_PORT: 5432  # Standard PostgreSQL port
      DB_USER: postgres
      DB_PASSWORD: 123
      DB_NAME: profileDB
      DB_SSLMODE: disable
      DB_TIMEZONE: Asia/Bangkok
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    restart: always

## FOR K8S ###

# version: '3.8'
# services:
#   rabbitmq:
#     image: rabbitmq:3-management
#     ports:
#       - "5672:5672"  # Adjusted for standard RabbitMQ port
#       - "15672:15672" # Adjusted for RabbitMQ management interface
#     restart: always

#   api-db:
#     image: postgres:13
#     ports:
#       - "5432:5432"  # Adjusted to standard PostgreSQL port
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 123
#       POSTGRES_DB: api
#     restart: always

#   api-gateway:
#     image: chainecs/api-gateway-img:latest
#     ports:
#       - "3333:3333"  # Adjusted to match internal port
#     depends_on:
#       - api-db
#       - chat-service
#       - organize-db
#       - organize-service
#       - profile-db
#       - profile-service
#       - rabbitmq
#     environment:
#       DATABASE_URL: "postgresql://postgres:123@api-db:5432/api"
#       JWT_SECRET: "super-secret"
#       PORT: 3333
#       CHAT_BASE_URL: "chat-service:30043" # Adjusted for internal service reference
#       ORGANIZE_BASE_URL: "http://organize-service:5003"
#       PROFILE_BASE_URL: "http://profile-service:5004"
#       RABBITMQ_URL: "amqp://rabbitmq:5672/" # Adjusted for internal service reference
#     command: /bin/sh -c "npx prisma migrate dev && yarn start"
#     restart: always

#   chat-service:
#     image: chainecs/chat-img
#     ports:
#       - "30043:30043"
#     environment:
#       - MONGODB_CONNECTION_STRING=mongodb+srv://chain:1234@cluster0.z7ijqog.mongodb.net/
#     restart: always

#   organize-db:
#     image: postgres:13
#     ports:
#       - "5433:5432"  # Changed host port to 5433
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 123
#       POSTGRES_DB: organizeDB
#     restart: always

#   organize-service:
#     image: chainecs/organize-img:latest
#     ports:
#       - "5003:5003"
#     depends_on:
#       - organize-db
#       - rabbitmq
#     environment:
#       DB_HOST: organize-db
#       DB_PORT: 5432  # Inside the container, the port remains 5432
#       DB_USER: postgres
#       DB_PASSWORD: 123
#       DB_NAME: organizeDB
#       DB_SSLMODE: disable
#       DB_TIMEZONE: Asia/Bangkok
#       RABBITMQ_URL: "amqp://rabbitmq:5672/"
#     restart: always

#   profile-db:
#     image: postgres:13
#     ports:
#       - "5434:5432"  # Changed host port to 5434
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 123
#       POSTGRES_DB: profileDB
#     restart: always

#   profile-service:
#     image: chainecs/profile-img:latest
#     ports:
#       - "5004:5004"
#     depends_on:
#       - profile-db
#       - rabbitmq
#     environment:
#       DB_HOST: profile-db
#       DB_PORT: 5432  # Inside the container, the port remains 5432
#       DB_USER: postgres
#       DB_PASSWORD: 123
#       DB_NAME: profileDB
#       DB_SSLMODE: disable
#       DB_TIMEZONE: Asia/Bangkok
#       RABBITMQ_URL: "amqp://rabbitmq:5672/"
#     restart: always

